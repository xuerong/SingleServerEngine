// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/MiGongPB.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from protos/MiGongPB.proto</summary>
public static partial class MiGongPBReflection {

  #region Descriptor
  /// <summary>File descriptor for protos/MiGongPB.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MiGongPBReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVwcm90b3MvTWlHb25nUEIucHJvdG8iEAoOQ1NHZXRNaUdvbmdNYXAiHQoO",
          "U0NHZXRNaUdvbmdNYXASCwoDbWFwGAEgAygFQg4KDGNvbS5wcm90b2NvbGIG",
          "cHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CSGetMiGongMap), global::CSGetMiGongMap.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SCGetMiGongMap), global::SCGetMiGongMap.Parser, new[]{ "Map" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///option java_outer_classname = "LivePB";
/// 12001
///------------------------------------------------------房间外的
/// </summary>
public sealed partial class CSGetMiGongMap : pb::IMessage<CSGetMiGongMap> {
  private static readonly pb::MessageParser<CSGetMiGongMap> _parser = new pb::MessageParser<CSGetMiGongMap>(() => new CSGetMiGongMap());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CSGetMiGongMap> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MiGongPBReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSGetMiGongMap() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSGetMiGongMap(CSGetMiGongMap other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSGetMiGongMap Clone() {
    return new CSGetMiGongMap(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CSGetMiGongMap);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CSGetMiGongMap other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CSGetMiGongMap other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class SCGetMiGongMap : pb::IMessage<SCGetMiGongMap> {
  private static readonly pb::MessageParser<SCGetMiGongMap> _parser = new pb::MessageParser<SCGetMiGongMap>(() => new SCGetMiGongMap());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SCGetMiGongMap> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MiGongPBReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCGetMiGongMap() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCGetMiGongMap(SCGetMiGongMap other) : this() {
    map_ = other.map_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCGetMiGongMap Clone() {
    return new SCGetMiGongMap(this);
  }

  /// <summary>Field number for the "map" field.</summary>
  public const int MapFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_map_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> map_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Map {
    get { return map_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SCGetMiGongMap);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SCGetMiGongMap other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!map_.Equals(other.map_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= map_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    map_.WriteTo(output, _repeated_map_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += map_.CalculateSize(_repeated_map_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SCGetMiGongMap other) {
    if (other == null) {
      return;
    }
    map_.Add(other.map_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10:
        case 8: {
          map_.AddEntriesFrom(input, _repeated_map_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
